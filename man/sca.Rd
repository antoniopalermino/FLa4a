% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fittingFunctions.R
\docType{methods}
\name{sca}
\alias{sca}
\alias{sca-methods}
\alias{sca,FLStock,FLIndex-method}
\alias{sca,FLStock,FLIndices-method}
\title{Statistical catch-at-age method}
\usage{
sca(stock, indices, ...)

\S4method{sca}{FLStock,FLIndex}(stock, indices, ...)

\S4method{sca}{FLStock,FLIndices}(stock, indices, fmodel = missing,
  qmodel = missing, srmodel = missing, n1model = missing,
  vmodel = missing, covar = missing, wkdir = missing,
  verbose = FALSE, fit = "assessment", center = TRUE,
  mcmc = missing, useTotalCatch = TRUE, useTotalCatchVar = FALSE,
  totalCatchVarMethod = 1)
}
\arguments{
\item{stock}{an \code{FLStock} object containing catch and stock information}

\item{indices}{an \code{FLIndices} object containing survey indices}

\item{...}{additional argument list that might never be used}

\item{fmodel}{a formula object depicting the model for log fishing mortality at age}

\item{qmodel}{a list of formula objects depicting the models for log survey catchability at age}

\item{srmodel}{a formula object depicting the model for log recruitment}

\item{n1model}{a formula object depicting the model for the population in the first year of the
time series}

\item{vmodel}{a list of formula objects depicting the model for the variance of fishing mortality
and the indices}

\item{covar}{a list with covariates to be used by the submodels. The formula must have an element
with the same name as the list element.}

\item{wkdir}{used to set a working directory for the admb optimiser; if wkdir is set, all admb
files are saved to this folder, otherwise they are deleted.}

\item{verbose}{if true, admb fitting information is printed to the screen.}

\item{fit}{character with type of fit: 'MP' or 'assessment'; the former does not require the
hessian to be computed, while the latter does.}

\item{center, }{logical defining if the data should be centered before fitting.}

\item{mcmc}{an \code{SCAMCMC} object with the arguments to run MCMC}

\item{useTotalCatch}{\code{logical} specifying whether to use total catch weight when there is
no age information available.}

\item{useTotalCatchVar}{\code{logical}, if FALSE (default) the variance of total catch is
computed from the estimated variance of catch at age.  If TRUE the
the \code{catch} slot in \code{stock} object should be a
\code{FLQuantDistr} class and the var slot should contain the variance
of the total catch.}

\item{totalCatchVarMethod}{temporary argument to set the method used to calculate the variance
of total catch from the variance of catch at age}
}
\value{
an \code{a4aFit} object if fit is "MP" or an \code{a4aFitSA} object if fit is "assessment"
}
\description{
Statistical catch-at-age method of the a4a stock assessment framework.
}
\details{
[REQUIRES REVISION] This method is the advanced method for stock assessment, it gives
         the user access to a set of arguments that the \code{sca} method doesn't. In particular,
         the default for the \code{fit} argument is 'assessment'. For detailed information about
         using the \code{sca} read the vignette 'The a4a Stock Assessment Modelling Framework'
         (\code{vignette('sca')}).
}
\examples{
data(ple4)
data(ple4.index)

# fishing mortality by age and year (separable) AND catchability at age without year trend
fmodel <- ~factor(age) + factor(year)
qmodel <- list(~factor(age))
fit1 <-  sca(fmodel=fmodel, qmodel=qmodel, stock=ple4, indices=FLIndices(ple4.index))

# fishing mortality as a smoother by age and year (but still separable) AND
# catchability at age without year trend
fmodel <- ~ s(age, k=4) + s(year, k=10)
qmodel <- list(~factor(age))
fit2 <-  sca(fmodel=fmodel, qmodel=qmodel, stock=ple4, indices=FLIndices(ple4.index))

# fishing mortality as a smoother by age and year (but still separable) AND
# catchability as a smoother by age without year trend
fmodel <- ~ s(age, k=4) + s(year, k=10)
qmodel <- list(~s(age, k=4))
fit3 <-  sca(fmodel=fmodel, qmodel=qmodel, stock=ple4, indices=FLIndices(ple4.index))

# fishing mortality as a smoother by age and year (but still separable) AND
# catchability as a smoother by age with year trend
fmodel <- ~ s(age, k=4) + s(year, k=10)
qmodel <- list(~s(age, k=4) + year)
fit4 <-  sca(fmodel=fmodel, qmodel=qmodel, stock=ple4, indices=FLIndices(ple4.index))

# It's a statistical model
BIC(fit1, fit2, fit3, fit4)

# fishing mortality as a smoother by age and year with interactions (i.e. non-separable) AND
# catchability as a smoother by age without year trend
fmodel <- ~ te(age, year, k=c(4, 10))
qmodel <- list(~s(age, k=4))
fit5 <-  sca(fmodel=fmodel, qmodel=qmodel, stock=ple4, indices=FLIndices(ple4.index))

# fit3 + smoother in recruitment
fmodel <- ~ s(age, k=4) + s(year, k=20)
qmodel <- list(~s(age, k=4))
rmodel <- ~s(year, k=20)
fit6 <-  sca(fmodel=fmodel, qmodel=qmodel, srmodel=rmodel, ple4, FLIndices(ple4.index))

# fit3 + bevholt
rmodel <- ~ bevholt(CV=0.05)
fit7 <-  sca(fmodel=fmodel, qmodel=qmodel, srmodel=rmodel, ple4, FLIndices(ple4.index))

# fit a model with missing age compositions in the catches using total catch to fill the gaps
ple4_gaps <- ple4
rng <- range(ple4_gaps)
# remove some catch.n values
gaps <- c(1960:1980)
catch.n(ple4_gaps)[, paste(gaps)] <- NA

data(ple4.indices)
ple4.indices <- ple4.indices[c("IBTS_Q1")]
fmodel <- ~ s(age, k = 4) +
            s(factor(year), bs = "cgmrf", m = 1, k = 15,
             xt = list(gaps = gaps,  weight = 0.01, xrange = rng[c("minyear", "maxyear")]))
qmodel <- list(~s(age, k = 4))
srmodel <- ~ bevholt(a = ~ 1, CV = 0.2)
vmodel <- list( ~ factor(replace(age, age > 3, 3)), ~ 1)
fit8 <- sca(fmodel = fmodel, qmodel = qmodel, srmodel = srmodel, vmodel = vmodel,
            ple4_gaps, ple4.indices)

# now do the same but specify the total catch variance and use it instead of
# the default behaviour of estimating it from the variance model for catch.n
catch.var <- catch(ple4_gaps)
catch.var[] <- 0.1 # give it 10\% cv
ple4_gaps_wts <- ple4_gaps
catch(ple4_gaps_wts) <- FLQuantDistr(catch(ple4_gaps), var = catch.var)
fit9 <- sca(fmodel = fmodel, qmodel = qmodel, srmodel = srmodel, vmodel = vmodel,
            ple4_gaps_wts, ple4.indices, useTotalCatchVar = TRUE)

}
