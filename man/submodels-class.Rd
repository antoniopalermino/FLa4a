% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/submodels-class.R
\docType{class}
\name{submodels}
\alias{submodels}
\alias{submodels-class}
\alias{submodels}
\alias{submodels-methods}
\alias{corBlocks}
\alias{corBlock-methods}
\alias{corBlocks,submodels-method}
\alias{params,submodels-method}
\alias{sMod,submodels-method}
\alias{formula,submodels-method}
\alias{corBlocks<-}
\alias{corBlocks<-,submodels,list-method}
\alias{corBlocks<-}
\alias{$<-,submodels,submodel-method}
\alias{[[<-,submodels,character,missing-method}
\alias{[[<-,submodels,numeric,missing-method}
\alias{propagate,submodels-method}
\alias{iter,submodels-method}
\title{Submodels class}
\usage{
submodels(...)

submodels(...)

corBlocks(object, ...)

\S4method{corBlocks}{submodels}(object)

\S4method{params}{submodels}(object)

\S4method{sMod}{submodels}(object)

\S4method{formula}{submodels}(x)

corBlocks(object, ...) <- value

\S4method{corBlocks}{submodels,list}(object, ...) <- value

\S4method{$}{submodels,submodel}(x, name) <- value

\S4method{[[}{submodels,character,missing}(x, i, j, ...) <- value

\S4method{[[}{submodels,numeric,missing}(x, i, j, ...) <- value

\S4method{propagate}{submodels}(object, iter, fill.iter = TRUE)

\S4method{iter}{submodels}(obj, it)
}
\arguments{
\item{...}{additional argument list that might never be used}

\item{object}{object of relevant class (see signature of method)}

\item{x}{object to be modified}

\item{value}{value the new object}

\item{name}{name(s) of entry to be extracted / modified}

\item{i, j}{indices specifying elements to extract or replace.}

\item{iter}{the number of iterations to create}

\item{fill.iter}{should the new iterations be filled with values (TRUE) or NAs (FALSE)}

\item{obj}{the object to be subset}

\item{it}{iteration to be extracted}
}
\description{
Class definition (slots), constructors, accessors, replacement (when relevant) and common methods.
}
\note{
This class is similar to other 'plural' calsses in \code{FLR}. It is a list constrained to having all elements of the same class, in this case \code{submodel}. Otherwise it works exacly as any other list.
}
\section{Constructor}{

A construction method exists for this class that can take named arguments for
any of its slots. All slots are then created to match the requirements of the
class validity. If an unnamed \code{FLQuant} object is provided, this is used
for sizing, but not for populating any slot.
}

