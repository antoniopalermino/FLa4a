% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCAPars-class.R
\docType{class}
\name{SCAPars}
\alias{SCAPars}
\alias{SCAPars-class}
\alias{SCAPars-methods}
\alias{SCAPars,missing-method}
\alias{stkmodel}
\alias{stkmodel-methods}
\alias{stkmodel,SCAPars-method}
\alias{n1model}
\alias{n1model-methods}
\alias{n1model,SCAPars-method}
\alias{srmodel}
\alias{srmodel-methods}
\alias{srmodel,SCAPars-method}
\alias{fmodel}
\alias{fmodel-methods}
\alias{fmodel,SCAPars-method}
\alias{qmodel}
\alias{qmodel-methods}
\alias{qmodel,SCAPars-method}
\alias{qMod}
\alias{qMod-methods}
\alias{qMod,SCAPars-method}
\alias{vmodel}
\alias{vmodel-methods}
\alias{vmodel,SCAPars-method}
\alias{vMod}
\alias{vMod-methods}
\alias{vMod,SCAPars-method}
\alias{srPars}
\alias{srPars-methods}
\alias{srPars,SCAPars-method}
\alias{srCovar}
\alias{srCovar-methods}
\alias{srCovar,SCAPars-method}
\alias{srFrml}
\alias{srFrml-methods}
\alias{srFrml,SCAPars-method}
\alias{fPars}
\alias{fPars-methods}
\alias{fPars,SCAPars-method}
\alias{fCovar}
\alias{fCovar-methods}
\alias{fCovar,SCAPars-method}
\alias{fFrml}
\alias{fFrml-methods}
\alias{fFrml,SCAPars-method}
\alias{qPars}
\alias{qPars-methods}
\alias{qPars,SCAPars-method}
\alias{qCovar}
\alias{qCovar-methods}
\alias{qCovar,SCAPars-method}
\alias{qFrml}
\alias{qFrml-methods}
\alias{qFrml,SCAPars-method}
\alias{vPars}
\alias{vPars-methods}
\alias{vPars,SCAPars-method}
\alias{vCovar}
\alias{vCovar-methods}
\alias{vCovar,SCAPars-method}
\alias{vFrml}
\alias{vFrml-methods}
\alias{vFrml,SCAPars-method}
\alias{m,SCAPars-method}
\alias{wt,SCAPars-method}
\alias{propagate,SCAPars-method}
\alias{iter,SCAPars-method}
\title{Model parameters class}
\usage{
SCAPars(object, ...)

\S4method{SCAPars}{missing}(object, ...)

stkmodel(object, ...)

\S4method{stkmodel}{SCAPars}(object)

n1model(object, ...)

\S4method{n1model}{SCAPars}(object)

srmodel(object, ...)

\S4method{srmodel}{SCAPars}(object)

fmodel(object, ...)

\S4method{fmodel}{SCAPars}(object)

qmodel(object, ...)

\S4method{qmodel}{SCAPars}(object)

qMod(object, ...)

\S4method{qMod}{SCAPars}(object)

vmodel(object, ...)

\S4method{vmodel}{SCAPars}(object)

vMod(object, ...)

\S4method{vMod}{SCAPars}(object)

srPars(object, ...)

\S4method{srPars}{SCAPars}(object)

srCovar(object, ...)

\S4method{srCovar}{SCAPars}(object)

srFrml(object, ...)

\S4method{srFrml}{SCAPars}(object)

fPars(object, ...)

\S4method{fPars}{SCAPars}(object)

fCovar(object, ...)

\S4method{fCovar}{SCAPars}(object)

fFrml(object, ...)

\S4method{fFrml}{SCAPars}(object)

qPars(object, ...)

\S4method{qPars}{SCAPars}(object)

qCovar(object, ...)

\S4method{qCovar}{SCAPars}(object)

qFrml(object, ...)

\S4method{qFrml}{SCAPars}(object)

vPars(object, ...)

\S4method{vPars}{SCAPars}(object)

vCovar(object, ...)

\S4method{vCovar}{SCAPars}(object)

vFrml(object, ...)

\S4method{vFrml}{SCAPars}(object)

\S4method{m}{SCAPars}(object)

\S4method{wt}{SCAPars}(object)

\S4method{propagate}{SCAPars}(object, iter, fill.iter = TRUE)

\S4method{iter}{SCAPars}(obj, it)
}
\arguments{
\item{object}{object of relevant class (see signature of method)}

\item{...}{additional argument list that might never be used}

\item{iter}{the number of iterations to create}

\item{fill.iter}{should the new iterations be filled with values (TRUE) or NAs (FALSE)}

\item{obj}{the object to be subset}

\item{it}{iteration to be extracted}
}
\description{
Class definition (slots), constructors, accessors, replacement (when relevant) and common methods.
}
\section{Slot}{
 
\describe{
\item{\code{stkmodel}}{parameters related to stock dynamics}
\item{\code{qmodel}}{paramaters related to catchability of tunning fleets}
\item{\code{vmodel}}{paramaters related to the variance model}
}
}

\section{Accessors}{

All slots in the class have accessor and replacement methods defined that
allow retrieving and substituting individual slots.

The values passed for replacement need to be of the class of that slot.
A numeric vector can also be used when replacing FLQuant slots, and the
vector will be used to substitute the values in the slot, but not its other
attributes.
}

\section{Constructor}{

A construction method exists for this class that can take named arguments for
any of its slots. All slots are then created to match the requirements of the
class validity. If an unnamed \code{FLQuant} object is provided, this is used
for sizing, but not for populating any slot.
}

